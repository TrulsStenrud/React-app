name: ci
on:
  push:
    branches: "**"
  workflow_dispatch:
    inputs:
      deploy_to_dev:
        description: "Force deploy to DEV"
        type: boolean
        required: true
        default: false

defaults:
  run:
    shell: bash --noprofile --norc -euo pipefail {0}

env:
  ACCOUNT_ID: "900831751659"
  AWS_REGION: "eu-west-1"
  S3_BUCKET_NAME: "trulsstenrud.com"
  ROLE_NAME: "GithubActions"

jobs:
  get-runner-user:
    runs-on: ubuntu-22.04
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "uid_gid=$(id -u):$(id -g)" >> "$GITHUB_OUTPUT"
  lint-and-build:
    needs: get-runner-user
    runs-on: ubuntu-22.04
    container:
      image: public.ecr.aws/z8l5l4v4/buildtools/tool/node:18
      options: --user ${{ needs.get-runner-user.outputs.uid_gid }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      # - name: Install dependencies
      #   run: npm ci
      # - name: Lint
      #   run: npm run lint
      # - name: Build
      #   run: npm run vite:build
      - name: Configure AWS credentials
        run: |
          export AWS_ROLE_ARN="arn:aws:iam::$ACCOUNT_ID:role/$ROLE_NAME"
          export AWS_WEB_IDENTITY_TOKEN_FILE="/tmp/awscreds"
          export AWS_DEFAULT_REGION="$AWS_REGION"
          # Persist AWS-related environment variables to the subsequent steps
          cat <<EOF >> "$GITHUB_ENV"
          AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE
          AWS_ROLE_ARN=$AWS_ROLE_ARN
          AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
          EOF
          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" \
            | jq -r '.value' > "$AWS_WEB_IDENTITY_TOKEN_FILE"
          aws sts get-caller-identity
      # - name: Upload to S3
      #   if: env.BRANCH_NAME == 'master'
      #   run: |
      #     cd build
      #     zip -r /tmp/artifact.zip .
      #     SHA_256="$(sha256sum /tmp/artifact.zip | cut -d' ' -f1)"
      #     S3_KEY="build/$SHA_256.zip"
      #     S3_URL="s3://$S3_BUCKET_NAME/$S3_KEY"
      #     aws s3 cp /tmp/artifact.zip $S3_URL
      #     echo "S3_KEY=$S3_KEY" >> $GITHUB_ENV
          
          
